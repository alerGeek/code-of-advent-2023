plugins {
    id("java")
}

group = "pl.alergeek"
version = "1.0-SNAPSHOT"
def jarPath = "${buildDir}/advent.jar"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.reflections:reflections:0.10.2"
    implementation("info.picocli:picocli:4.7.0")
    annotationProcessor "info.picocli:picocli-codegen:4.7.5"
    testImplementation(platform("org.junit:junit-bom:5.9.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation("org.assertj:assertj-core:3.24.2")
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

wrapper {
    gradleVersion = 8.2
    distributionType = Wrapper.DistributionType.BIN
}

jar {
    archiveFileName = jarPath
    manifest {
        attributes 'Main-Class': 'pl.alergeek.AppCommand'
    }
    from(configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }) {}
}

tasks.register('list', JavaExec) {
    group "_jar"
    dependsOn jar
    description "run tests from given day"
    description "list existing days"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "-jar"
    args = [
            "${buildDir}/advent.jar",
            "list",
    ]
}

tasks.register("day1", JavaExec) {
    group "_jar"
    description "run tests from given day"
    dependsOn jar
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "-jar"
    args = [
            "${buildDir}/advent.jar",
            "run", "--day", "day1"
    ]
}

tasks.register("day2", JavaExec) {
    group "_jar"
    description "run tests from given day"
    dependsOn jar
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "-jar"
    args = [
            "${buildDir}/advent.jar",
            "run", "--day", "day2"
    ]
}

tasks.register("day3", JavaExec) {
    group "_jar"
    description "run tests from given day"
    dependsOn jar
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "-jar"
    args = [
            "${buildDir}/advent.jar",
            "run", "--day", "day3"
    ]
}

tasks.register("day4", JavaExec) {
    group "_jar"
    description "run tests from given day"
    dependsOn jar
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "-jar"
    args = [
            "${buildDir}/advent.jar",
            "run", "--day", "day4"
    ]
}

tasks.register("day5", JavaExec) {
    group "_jar"
    description "run tests from given day"
    dependsOn jar
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "-jar"
    jvmArgs = ["-Xlog:gc:gc.log", "-XX:+PrintFlagsFinal", "-XX:ReservedCodeCacheSize=1024m", "-Xms4g", "-Xmx4g"]
    args = [
            "${buildDir}/advent.jar",
            "run", "--day", "day5"
    ]
}

tasks.test {
    useJUnitPlatform()
}